version: "3.7"

networks:
  edge:
    name: edge
  internal:
    name: internal
  socket:
    name: socket
  local:

services:
  plex:
    container_name: ${COMPOSE_PROJECT_NAME}.plex
    image: lscr.io/linuxserver/plex:latest
    volumes:
      - "${ROOT}/config/plex/transcode:/tmp/Transcode"
      - "${ROOT}/config/plex/config:/config"
      - ${ROOT}/config/xteve/data:/xteve/data:rw
      - "${ROOT}/media:/data"
    ports:
      - 32400:32400/tcp
    environment:
      - TZ=Europe/Stockholm
      - PLEX_CLAIM=${PLEX_CLAIM}
      - HOSTNAME=plex.${VIRTUAL_HOST}
      - PUID=${MEDIA_UID}
      - PGID=${MEDIA_GID}
    labels:
      - traefik.enable=true
      - traefik.http.routers.plex.entrypoints=websecure
      - traefik.http.routers.plex.rule=Host(`plex.${VIRTUAL_HOST}`)
      - traefik.http.routers.plex.service=plex
      - traefik.http.services.plex.loadbalancer.server.port=32400
      - traefik.http.routers.plex.middlewares=secure-noauth
    restart: unless-stopped
    networks:
      - edge
      - local
      - internal
    # healthcheck:
    #   test: curl --connect-timeout 15 --silent --show-error --fail http://localhost:32400/identity
    #   interval: 1m00s
    #   timeout: 15s
    #   retries: 3
    #   start_period: 1m00s
  media:
    image: lscr.io/linuxserver/transmission:latest
    container_name: ${COMPOSE_PROJECT_NAME}.ts
    volumes:
      - "${ROOT}/config/ts:/config"
      - "${ROOT}/media:/media"
      - "${ROOT}/media/torrents:/watch"
    environment:
      - PUID=${MEDIA_UID}
      - PGID=${MEDIA_GID}
      - TZ=Europe/Stockholm
    restart: unless-stopped
    network_mode: container:${VPN_CONTAINER}
    depends_on:
      wait-for:
        condition: service_completed_successfully
  flood:
    container_name: ${COMPOSE_PROJECT_NAME}.flood
    image: jesec/flood:latest
    user: ${MEDIA_UID}:${MEDIA_UID}
    restart: unless-stopped
    volumes:
      - ${ROOT}/config/flood:/config
      - ${ROOT}/media:/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.flood-ts.entrypoints=websecure
      - traefik.http.routers.flood-ts.rule=Host(`flood.${VIRTUAL_HOST}`)
      - traefik.http.routers.flood-ts.service=flood-ts
      - traefik.http.services.flood-ts.loadbalancer.server.port=3000
      - traefik.http.routers.flood-ts.middlewares=secure-auth
    command: --allowedpath /media --auth default --host 0.0.0.0 --rundir /config
    networks:
      - edge
      - local
      - internal
  radarr:
    container_name: ${COMPOSE_PROJECT_NAME}.radarr
    image: lscr.io/linuxserver/radarr:latest
    environment:
      - PUID=${MEDIA_UID}
      - PGID=${MEDIA_GID}
      - TZ=Europe/Stockholm
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.rule=Host(`radarr.${VIRTUAL_HOST}`)
      - traefik.http.routers.radarr.service=radarr
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.middlewares=secure-auth
    volumes:
      - ${ROOT}/config/radarr:/config
      - ${ROOT}/media:/media
    restart: unless-stopped
    networks:
      - edge
      - local
      - internal
  sonarr:
    container_name: ${COMPOSE_PROJECT_NAME}.sonarr
    image: lscr.io/linuxserver/sonarr:latest
    environment:
      - PUID=${MEDIA_UID}
      - PGID=${MEDIA_GID}
      - TZ=Europe/Stockholm
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${VIRTUAL_HOST}`)
      - traefik.http.routers.sonarr.service=sonarr
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.middlewares=secure-auth
    volumes:
      - ${ROOT}/config/sonarr:/config
      - ${ROOT}/media:/media
    restart: unless-stopped
    networks:
      - edge
      - local
      - internal
  prowlarr:
    container_name: ${COMPOSE_PROJECT_NAME}.prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    environment:
      - PUID=${MEDIA_UID}
      - PGID=${MEDIA_GID}
      - TZ=Europe/Stockholm
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entrypoints=websecure
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${VIRTUAL_HOST}`)
      - traefik.http.routers.prowlarr.service=prowlarr
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      - traefik.http.routers.prowlarr.middlewares=secure-auth
    volumes:
      - ${ROOT}/config/prowlarr:/config
    restart: unless-stopped
    networks:
      - edge
      - local
      - internal
  overseerr:
    container_name: ${COMPOSE_PROJECT_NAME}.overseerr
    image: lscr.io/linuxserver/overseerr:latest
    environment:
      - PUID=${MEDIA_UID}
      - PGID=${MEDIA_GID}
      - TZ=Europe/Stockholm
    labels:
      - traefik.enable=true
      - traefik.http.routers.overseerr.entrypoints=websecure
      - traefik.http.routers.overseerr.rule=Host(`overseerr.a.progress44.com`)
      - traefik.http.routers.overseerr.service=overseerr
      - traefik.http.services.overseerr.loadbalancer.server.port=5055
      - traefik.http.routers.overseerr.middlewares=secure-noauth
    volumes:
      - ${ROOT}/config/overseerr:/config
    restart: unless-stopped
    networks:
      - edge
      - local
  tautulli:
    container_name: ${COMPOSE_PROJECT_NAME}.tautulli
    image: tautulli/tautulli:latest
    restart: unless-stopped
    environment:
      - PUID=${MEDIA_UID}
      - PGID=${MEDIA_GID}
      - TZ=Europe/Stockholm
    labels:
      - traefik.enable=true
      - traefik.http.routers.tautulli.entrypoints=websecure
      - traefik.http.routers.tautulli.rule=Host(`tautulli.${VIRTUAL_HOST}`)
      - traefik.http.routers.tautulli.service=tautulli
      - traefik.http.services.tautulli.loadbalancer.server.port=8181
      - traefik.http.routers.tautulli.middlewares=secure-auth
    volumes:
      - ${ROOT}/config/tautulli:/config
      - "${ROOT}/config/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro"
    depends_on:
      - plex
    networks:
      - edge
      - local
  xteve:
    image: tnwhitwell/xteve
    container_name: ${COMPOSE_PROJECT_NAME}.xteve
    restart: unless-stopped
    network_mode: container:${VPN_CONTAINER}
    environment:
      - TZ=Europe/Stockholm
      - XTEVE_PORT=34400
    volumes:
      - ${ROOT}/config/xteve/home:/home/xteve/conf:rw
      - ${ROOT}/config/xteve/data:/config/data:rw
      - /dev/shm:/tmp/xteve
    # depends_on:
    #   wait-for:
    #     condition: service_healthy
  wait-for:
    image: owncloudci/wait-for:latest
    command: --it ${VPN_CONTAINER}:9001 -t ${TIMEOUT}
    networks:
      - local
      - internal
      - socket
